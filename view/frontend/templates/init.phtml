<?php
/**
 * @author Hervé Guétin <www.linkedin.com/in/herveguetin>
 */

use Maddlen\Zermatt\App\App;
use Maddlen\Zermatt\App\Variable;
use Magento\Framework\View\Element\Template;

?>
<?php
/** @var Template $block */
/** @var App $app */
$app = $block->getData('app');
?>
<?php if ($app->withZermatt()): ?>
    <?php
    /**
     * Inject the main app JS file.
     * When Magento is in developer mode, the vite dev server will serve the JS file.
     * Otherwise, the JS file will be served by Magento after `npm run built` was run.
     * @see \Maddlen\Zermatt\App\Build
     */
    ?>
    <?php if ($app->isViteDevMode()): ?>
        <script type="module" src="http://localhost:5173/@vite/client"></script>
        <script type="module" src="http://localhost:5173/zermatt.js"></script>
    <?php else: ?>
        <script type="module" src="<?= $block->getViewFileUrl($app->entryFilepath()) ?>"></script>
    <?php endif; ?>

    <?php
    /**
     * Declare the main Zermatt object and populate it with the list of variables
     * that backend wants to expose to frontend.
     *
     * The JS app will enrich the Zermatt object on page load
     * with additional features, utilities, etc.
     */
    ?>
    <script>
        class ZermattVariables {
            constructor (data) {
                // All variables passed by backend are readonly...
                for (const key in data) {
                    if (data.hasOwnProperty(key)) {
                        Object.defineProperty(this, key, {
                            value: data[key],
                            writable: false,
                            enumerable: true,
                            configurable: false
                        })
                    }
                }
                // ... except formKey which will be populated asynchronously
                // by the frontend to avoid caching
                Object.defineProperty(this, 'formKey', {
                    value: '',
                    writable: true,
                    enumerable: true,
                    configurable: true
                })
            }
        }

        window.Zermatt = {
            Variables: new ZermattVariables(JSON.parse('<?= json_encode(Variable::all()) ?>'))
        }
    </script>
<?php endif ?>
